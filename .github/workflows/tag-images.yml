name: Tag Docker Version

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The version to tag docker images'
        required: true
        type: string

jobs:
  tag_images:
    runs-on: ubuntu-latest
    timeout-minutes: 80
    environment: Production
    permissions:
      contents: read
      packages: write
      deployments: write
    steps:
      - name: Login to docker
        env:
          GH_ACTOR: knovator
          GH_PASSWORD: ${{ secrets.GH_PACKAGES }}
        run: |
          echo $GH_PASSWORD | docker login ghcr.io -u $GH_ACTOR --password-stdin 

      - name: Tag API
        env:
          REGISTERY_OWNER: knovator
          DOCKER_NAME: impler/api
          DOCKER_VERSION: ${{ inputs.version }}
        run: |
          docker pull ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:prod
          docker tag ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:prod ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:$DOCKER_VERSION
          docker push ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:$DOCKER_VERSION
          echo "::set-output name=IMAGE::ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:$DOCKER_VERSION"

      - name: Tag Queue Manager
        env:
          REGISTERY_OWNER: knovator
          DOCKER_NAME: impler/queue-manager
          DOCKER_VERSION: ${{ inputs.version }}
        run: |
          docker pull ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:prod
          docker tag ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:prod ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:$DOCKER_VERSION
          docker push ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:$DOCKER_VERSION
          echo "::set-output name=IMAGE::ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:$DOCKER_VERSION"

      - name: Tag EMBED
        env:
          REGISTERY_OWNER: knovator
          DOCKER_NAME: impler/embed
          DOCKER_VERSION: ${{ inputs.version }}
        run: |
          docker pull ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:prod
          docker tag ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:prod ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:$DOCKER_VERSION
          docker push ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:$DOCKER_VERSION
          echo "::set-output name=IMAGE::ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:$DOCKER_VERSION"

      - name: Tag WIDGET
        env:
          REGISTERY_OWNER: knovator
          DOCKER_NAME: impler/widget
          DOCKER_VERSION: ${{ inputs.version }}
        run: |
          docker pull ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:prod
          docker tag ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:prod ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:$DOCKER_VERSION
          docker push ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:$DOCKER_VERSION
          echo "::set-output name=IMAGE::ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:$DOCKER_VERSION"

      - name: Tag DEMO
        env:
          REGISTERY_OWNER: knovator
          DOCKER_NAME: impler/demo
          DOCKER_VERSION: ${{ inputs.version }}
        run: |
          docker pull ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:prod
          docker tag ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:prod ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:$DOCKER_VERSION
          docker push ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:$DOCKER_VERSION
          echo "::set-output name=IMAGE::ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:$DOCKER_VERSION"
