name: Publish Embed to Production

on:
  workflow_call:
    secrets:
      GH_PACKAGES:
        required: true
  workflow_dispatch:

jobs:
  build_embed:
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    runs-on: ubuntu-latest
    timeout-minutes: 80
    permissions:
      contents: read
      packages: write 
      deployments: write
    steps:
      - uses: actions/checkout@v2
      - name: Setup kernel for react native, increase watchers
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
      
      - uses: actions/setup-node@v2
        with:
          node-version: '20.13.1'

      - name: Cache pnpm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.0.1
        env:
          CI: false
        with:
          version: 8.9.0
          run_install: true

      - name: Build
        run: pnpm run --filter @impler/embed build:prod

      - name: Build, tag, and push image to Github Container Registry
        id: build-image
        env:
          REGISTERY_OWNER: implerhq
          DOCKER_NAME: impler/embed
          IMAGE_TAG: ${{ github.event.pull_request.head.sha || github.sha }}
          GH_ACTOR: implerhq
          GH_PASSWORD: ${{ secrets.GH_PACKAGES }}
        run: |
          echo $GH_PASSWORD | docker login ghcr.io -u $GH_ACTOR --password-stdin
          docker build -t ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:$IMAGE_TAG -f libs/embed/Dockerfile .
          # docker tag ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:$IMAGE_TAG ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:prod
          docker tag ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:$IMAGE_TAG ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:latest

          # docker push ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:prod
          docker push ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:latest
          docker push ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:$IMAGE_TAG
          echo "::set-output name=IMAGE::ghcr.io/$REGISTERY_OWNER/$DOCKER_NAME:$IMAGE_TAG"

