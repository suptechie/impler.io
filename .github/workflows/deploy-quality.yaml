name: Deploy Impler to Quality

on:
  push:
    branches:
      - next

jobs:
  build_api:
    env:
      GH_PASSWORD: ${{ secrets.GH_PACKAGES }}
      GH_ACTOR: implerhq
    permissions:
      contents: read
      packages: write 
      deployments: write
    # if: ${{ github.event_name == 'push' && (github.event.head_commit.modified || github.event.head_commit.added || github.event.head_commit.removed) && contains(toJSON(github.event.head_commit.modified), 'apps/api/') }}
    uses: ./.github/workflows/build-api.yml

  build_embed:
    permissions:
      contents: read
      packages: write
      deployments: write
    if: ${{ github.event_name == 'push' && (github.event.head_commit.modified || github.event.head_commit.added || github.event.head_commit.removed) && contains(toJSON(github.event.head_commit.modified), 'apps/demo/') }}
    uses: ./.github/workflows/build-embed.yml

  build_queuemanager:
    permissions:
      contents: read
      packages: write
      deployments: write
    if: ${{ github.event_name == 'push' && (github.event.head_commit.modified || github.event.head_commit.added || github.event.head_commit.removed) && contains(toJSON(github.event.head_commit.modified), 'apps/queue-manager/') }}
    uses: ./.github/workflows/build-queuemanager.yml

  build_web:
    permissions:
      contents: read
      packages: write
      deployments: write
    if: ${{ github.event_name == 'push' && (github.event.head_commit.modified || github.event.head_commit.added || github.event.head_commit.removed) && contains(toJSON(github.event.head_commit.modified), 'apps/web/') }}
    uses: ./.github/workflows/build-web.yml

  build_widget:
    permissions:
      contents: read
      packages: write
      deployments: write
    if: ${{ github.event_name == 'push' && (github.event.head_commit.modified || github.event.head_commit.added || github.event.head_commit.removed) && contains(toJSON(github.event.head_commit.modified), 'apps/widget/') }}
    uses: ./.github/workflows/build-widget.yml

  deploy_with_ssh:
    runs-on: ubuntu-latest
    needs:
      - build_api
      - build_embed
      - build_queuemanager
      - build_web
      - build_widget
    steps:
      - name: Set up SSH and Run Docker Compose Up
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_QA }}
      - name: Run Docker Compose Up
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME_QA }}@${{ secrets.SSH_HOST_QA }} \
            "cd ${{ secrets.SSH_PATH_QA }} && docker compose up -d"
